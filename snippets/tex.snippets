global !p
texMathZones = ['texMathZone' + x for x in ['A', 'AS', 'B', 'BS', 'C', 'CS',
'D', 'DS', 'E', 'ES', 'F', 'FS', 'G', 'GS', 'H', 'HS', 'I', 'IS', 'J', 'JS',
'K', 'KS', 'L', 'LS', 'DS', 'V', 'W', 'X', 'Y', 'Z', 'AmsA', 'AmsB', 'AmsC',
'AmsD', 'AmsE', 'AmsF', 'AmsG', 'AmsAS', 'AmsBS', 'AmsCS', 'AmsDS', 'AmsES',
'AmsFS', 'AmsGS' ]]

texIgnoreMathZones = ['texMathText']

texMathZoneIds = vim.eval('map('+str(texMathZones)+", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")

ignore = texIgnoreMathZoneIds[0]

def math():
	synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
	try:
		first = next(
            i for i in reversed(synstackids)
            if i in texIgnoreMathZoneIds or i in texMathZoneIds
        )
		return first != ignore
	except StopIteration:
		return False
endglobal

snippet pic "Insert Picture"
\begin{center}
	\includegraphics[scale=1]{${0:./img/name/png}}
\end{center}
endsnippet

snippet start "default start"
\documentclass{nlistok}
%\def\asydir{asy}

\begin{document}

$0

\end{document}
endsnippet

snippet sub "subfile"
\documentclass[class=nlistok, crop=false]{standalone}
%usepackage{asymptote}
%\def\asydir{asy}


\begin{document}

$0

\end{document}
endsnippet

snippet beg "begin{} / end{}"
\begin{$1}
	$0
\end{$1}
endsnippet

snippet enum "list"
\begin{enumerate}[leftmargin=0pt]
	\item
		$0
\end{enumerate}
endsnippet

snippet item "list item"
\item
	$0
endsnippet

snippet tbf "bold text"
\textbf{$1} $0
endsnippet

snippet tit "italic text"
\textit{$1} $0
endsnippet

snippet ddf "big fraction" i
\$\ddfrac{$1}{$2} $0\$
endsnippet

context "math()"
snippet ddf "big fraction" i
\ddfrac{$1}{$2} $0
endsnippet

snippet mrm "big fraction" i
\$\mathrm{$1}\$
endsnippet

context "math()"
snippet mrm "big fraction" i
\mathrm{$1}
endsnippet

snippet exp "exponent" i
^{$1} $0
endsnippet

snippet ind "index" i
_{$1} $0
endsnippet

snippet im "Math"
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet om "Math"
\[
$1
\]
$0
endsnippet

snippet deg "Degree" i
^{\circ}
endsnippet

snippet sq "^2" i
^2
endsnippet

snippet cb "^3" i
^3
endsnippet

snippet pl "plus" i
 +
endsnippet

snippet mn "minus" i
 -
endsnippet

snippet eq "equals" i
 =
endsnippet

snippet sin "sine" i
\sin($1) $0
endsnippet

snippet cos "cosine" i
\cos($1) $0
endsnippet

priority 10
snippet "bar" "bar" ri
\overline{$1}$0
endsnippet

priority 100
snippet "([a-zA-Z])bar" "bar" ri
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
snippet "hat" "hat" ri
\hat{$1}$0
endsnippet

priority 100
snippet "([a-zA-Z])hat" "hat" ri
\hat{`!p snip.rv=match.group(1)`}
endsnippet

snippet fig "figure"
\begin{figure}[ht]
	\centering
	\incfig{$1}
	\caption{$2}
	\label{fig:$2}
\end{figure}
endsnippet

snippet prob "problem"
\tproblem{$0} %{{{
	$1

\solution{sol} %{{{

% }}}
% }}}
endsnippet

snippet box "paragraph box"
\fbox{\parbox{\textwidth}{
$0
}}
endsnippet
